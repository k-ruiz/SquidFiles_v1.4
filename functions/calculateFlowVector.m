%% Function to calculate the flow profile
% generated by some collection of Stokeslets over some pre-defined grid

function [Uflow] = calculateFlowVector(stks1, iS, x1, eps1)

x1 = [x1(1:2:end),x1(2:2:end)];

% Pre-allocate arrays for efficiency
nStok = size(stks1,1);
Uflow = zeros(length(x1),2);
r = zeros(nStok,1);
rho = zeros(nStok,1);
Stemp = zeros(2,2,nStok);
U = zeros(2, nStok);

% Calculate Ubdry, Fvert, F, Uback, and torque
Ubdry = zeros(2*length(stks1(:,1)),1);
Ubdry(1:2:end) = stks1(:,4);
Ubdry(2:2:end) = stks1(:,5);
Ubdry = [Ubdry;0;0;0];
Fvert = iS * Ubdry;
F = [Fvert(1:2:end-3), Fvert(2:2:end-3)]';
Uback = Fvert(end-2:end-1);
torque = Fvert(end);

% Vectorize calculations for each grid position
for xposition = 1:length(x1)

    p = [x1(xposition,1), x1(xposition,2)]';

    % Distance and rho calculations (vectorized)
    r(:) = sqrt(vecnorm(p - stks1(:,1:2)').^2 + eps1^2) + eps1;
    rho(:) = (r + eps1) ./ (r .* (r - eps1));

    % Calculate Stemp for each Stokeslet (vectorized)
    Stemp(1,1,:) = -(log(r(:))-eps1*rho(:)) + (p(1)-stks1(:,1)).*(p(1)-stks1(:,1)).*rho(:)./r(:);
    Stemp(1,2,:) = (p(1)-stks1(:,1)).*(p(2)-stks1(:,2)).*rho(:)./r(:);
    Stemp(2,1,:) = (p(2)-stks1(:,2)).*(p(1)-stks1(:,1)).*rho(:)./r(:);
    Stemp(2,2,:) = -(log(r(:))-eps1*rho(:)) + (p(2)-stks1(:,2)).*(p(2)-stks1(:,2)).*rho(:)./r(:);

    % U = Stemp * reshape(F, [size(F,1), 1, size(F,2)])
    U = reshape(pagemtimes(Stemp,reshape(F, [size(F,1), 1, size(F,2)])),2,nStok);

    Uflow(xposition,1) = sum(U(1,:)) - torque*p(2);
    Uflow(xposition,2) = sum(U(2,:)) + torque*p(1);
end

% Add background flow
Uflow(:,1) = Uflow(:,1) + Uback(1);
Uflow(:,2) = Uflow(:,2) + Uback(2);

end
