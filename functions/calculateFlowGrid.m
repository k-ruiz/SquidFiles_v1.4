%% Function to calculate the flow profile
% generated by some collection of Stokeslets over some pre-defined grid

function [Uflowx, Uflowy, Uback, torque] = calculateFlowGrid(stks1, iS, x1, y1, eps1)

% Pre-allocate arrays for efficiency
nStok = size(stks1,1);
Uflowx = zeros(length(x1),length(y1));
Uflowy = zeros(length(x1),length(y1));
r = zeros(nStok,1);
rho = zeros(nStok,1);
Stemp = zeros(2,2,nStok);
%U = zeros(2, nStok);

% Calculate Ubdry, Fvert, F, Uback, and torque
Ubdry = zeros(2*length(stks1(:,1)),1);
Ubdry(1:2:end) = stks1(:,4);
Ubdry(2:2:end) = stks1(:,5);
Ubdry = [Ubdry;0;0;0];
Fvert = iS * Ubdry;
F = [Fvert(1:2:end-3), Fvert(2:2:end-3)]';
Uback = Fvert(end-2:end-1);
torque = Fvert(end);

% Vectorize calculations for each grid position
for xposition = 1:length(x1) % Parallelisable here
    for yposition = 1:length(y1)

        p = [x1(xposition), y1(yposition)]';

        % Distance and rho calculations (vectorized)
        r(:) = sqrt(vecnorm(p - stks1(:,1:2)').^2 + eps1^2) + eps1;
        rho(:) = (r + eps1) ./ (r .* (r - eps1));

        % Calculate Stemp for each Stokeslet (vectorized)
        Stemp(1,1,:) = -(log(r(:))-eps1*rho(:)) + (p(1)-stks1(:,1)).*(p(1)-stks1(:,1)).*rho(:)./r(:);
        Stemp(1,2,:) = (p(1)-stks1(:,1)).*(p(2)-stks1(:,2)).*rho(:)./r(:);
        Stemp(2,1,:) = (p(2)-stks1(:,2)).*(p(1)-stks1(:,1)).*rho(:)./r(:);
        Stemp(2,2,:) = -(log(r(:))-eps1*rho(:)) + (p(2)-stks1(:,2)).*(p(2)-stks1(:,2)).*rho(:)./r(:);

        % for i = 1:1098
        %     U(:,i) = Stemp(1:2,1:2,i)*F(1:2,i);
        % end

        % U = Stemp * reshape(F, [size(F,1), 1, size(F,2)])
        U = reshape(pagemtimes(Stemp,reshape(F, [size(F,1), 1, size(F,2)])),2,nStok);

        Uflowx(xposition, yposition) = sum(U(1,:)) - torque*p(2);
        Uflowy(xposition, yposition) = sum(U(2,:)) + torque*p(1);

    end
end

% Add background flow
Uflowx = Uflowx + Uback(1);
Uflowy = Uflowy + Uback(2);

end

